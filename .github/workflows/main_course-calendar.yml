name: Build and deploy Node.js app to Azure Web App - course-calendar

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout the repository
      - uses: actions/checkout@v3

      # Set up Node.js version 18.x
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      # Install dependencies, build, and test the app
      - name: npm install, build, and test
        run: |
          cd app
          npm install
          npm run build --if-present
          npm run test --if-present

      # Upload the built app directory as an artifact for the deployment job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: |
            app/**/*  # Upload everything in the app directory except exclusions
            !app/node_modules/**
            !app/.git/**

  deploy:
    runs-on: windows-latest 
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write

    steps:
      # Download the built app artifact from the build job
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      # Log in to Azure
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_5A5BBA17D8A34BB8B6EA671C02B31A89 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_6CCF72118AAF4AD1AD99279C90DD5CB9 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_2FE7DA45C13A4CDC93BB0A5D1AD17231 }}

      # Deploy to Azure Web App
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'course-calendar'
          slot-name: 'Production'
          package: ./  # Ensure it deploys everything from the downloaded artifact's root
